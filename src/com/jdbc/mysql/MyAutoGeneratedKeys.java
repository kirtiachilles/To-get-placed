package com.jdbc.mysql;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/*
 * When we are inserting a record into the database table and the primary key
 * is an auto-increment or auto-generated key, then the insert query will generate 
 * it dynamically. The below example shows how to get this key after insert statement. 
 * After performing executeUpdate() method on PreparedStatement,
 *  call getGeneratedKeys() method on PreparedStatement. 
 *  It will return you ResultSet, from which you can get auto increment column values.
 *  */
public class MyAutoGeneratedKeys {

	@SuppressWarnings("resource")
	public static void main(String[] args) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String url = "jdbc:mysql://localhost/mvc";
		String query = "insert into category (cat_name) values (?)";
				
		try {
			Class.forName("com.mysql.jdbc.Driver");
			conn = DriverManager.getConnection(url,"root","broachilles");
			
			pstmt = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
			pstmt.setString(1, "Clothes");
			pstmt.executeUpdate();
			
			rs=pstmt.getGeneratedKeys();
			if (rs != null && rs.next()) {
				 System.out.println("Generated Category ID : "+rs.getInt(1));
			}
			
			pstmt = conn.prepareStatement("select * from category"); 
			rs = pstmt.executeQuery();
			while (rs.next()) {
				System.out.println("category id : "+rs.getInt(1)+" "+ "category : "+rs.getString(2));
			}
		} catch (ClassNotFoundException e) {			
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {			
			try {
				if (rs != null)
					rs.close();
				if (pstmt != null)
					pstmt.close();
				if (conn != null)
					conn.close();
			} catch (Exception e2) {
				System.out.println("Exception in closing Resources "+e2.getMessage());
			}
		}

	}

}
	
